import { useState, useCallback } from "react";
import TempleInfo from "../../components/templedetail/TempleInfo";
import TempleTabs from "../../components/templedetail/TempleTabs";
import AddPicture from "../../components/templedetail/AddPicture";

function TempleDetailPage() {
  // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏ó‡πá‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const [selectedTab, setSelectedTab] = useState("Picture");

  // ‚úÖ ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á Pop-up
  const [showAddPicturePopup, setShowAddPicturePopup] = useState(false);

  // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°
  const [pictures, setPictures] = useState([]);

  // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
  const [descImage, setDescImage] = useState(null);

  // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏î
  const [templeData, setTempleData] = useState({
    name: "‡∏ß‡∏±‡∏î‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏ó‡∏≠‡∏á",
    description: "‡∏ß‡∏±‡∏î‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏Å‡πà‡πÉ‡∏ô‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°...",
    address: "‡∏ñ‡∏ô‡∏ô‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏ó‡∏≠‡∏á ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏®‡∏µ‡∏£‡∏©‡∏∞‡∏ó‡∏≠‡∏á ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°",
  });

  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ‡∏ó‡∏µ‡πà "Picture" ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
  const handleAddPicture = useCallback((newImage) => {
    setPictures((prev) => [...prev, newImage]);
    setShowAddPicturePopup(false);
  }, []);

  // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
  const handleEditPicture = useCallback((index, newImage) => {
    setPictures((prev) => {
      const updatedPictures = [...prev];
      updatedPictures[index] = newImage;
      return updatedPictures;
    });
  }, []);

  return (
    <div className="flex justify-center items-center bg-white p-6">
      <div className="w-full max-w-5xl p-6">

        {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏î */}
        <TempleInfo
          templeData={templeData}
          setTempleData={setTempleData}
          descImage={descImage}
          setDescImage={setDescImage}
        />

        {/* ‚úÖ ‡πÅ‡∏ó‡πá‡∏ö */}
        <TempleTabs selectedTab={selectedTab} setSelectedTab={setSelectedTab} />

        {/* üî∑ ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
        {selectedTab === "Picture" && (
          <div className="text-center mt-6">
            <button
              className="bg-[#44AFB6] text-white px-6 py-2 rounded-lg shadow-md hover:bg-teal-600"
              onClick={() => setShowAddPicturePopup(true)}
            >
              Add Picture
            </button>

            {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà */}
            <div className="grid grid-cols-3 gap-4 mt-6">
              {pictures.map((image, index) => (
                <div key={index} className="relative">
                  <img
                    src={image}
                    alt={`Temple ${index}`}
                    className="w-full h-40 object-cover rounded-lg shadow-md"
                  />

                  {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏° Edit ‡∏£‡∏π‡∏õ */}
                  <button
                    className="absolute bottom-2 right-2 bg-blue-500 text-white px-3 py-1 rounded-md text-sm"
                    onClick={() => setShowAddPicturePopup(index)}
                  >
                    Edit
                  </button>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* ‚úÖ Popup ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏π‡∏õ */}
        {showAddPicturePopup !== false && (
          <AddPicture
            show={true}
            onClose={() => setShowAddPicturePopup(false)}
            onEdit={(newImage) => {
              if (typeof showAddPicturePopup === "number") {
                handleEditPicture(showAddPicturePopup, newImage);
              } else {
                handleAddPicture(newImage);
              }
            }}
          />
        )}
      </div>
    </div>
  );
}

export default TempleDetailPage;
