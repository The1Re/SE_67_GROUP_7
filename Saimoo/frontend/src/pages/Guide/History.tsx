import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import axios from "@/api";
import PackageCard from "@/components/historyguidetrip/PackageCard";
import { useAuth } from "@/context/AuthContext";
import { Trip } from "@/models/Trip";
import DataLoading from "@/components/DataLoading";


const HistoryTrip: React.FC = () => {
  const [packages, setPackages] = useState([]); // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);
  const [trip, setTrip] = useState([]);
  const navigate = useNavigate();
  const { user } = useAuth();

  // üìö ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API
  const fetchPackages = async () => {
    try {
      const userId = user?.id;
      if (!userId) {
        setError("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
        setIsLoading(false);
        return;
      }

      const res = await axios.get("/trips");

      console.log("üìö ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API:", res.data.data);

      // Filter trips where ownerTripId matches the current user's ID
      const filteredTrips = res.data.data.filter(
        (trip) => trip.ownerTripId === userId
      );
      setTrip(filteredTrips)
      console.log("üìö ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á:", filteredTrips);

      const formattedData = filteredTrips.map((trip: any) => ({
        id: trip.id,
        title: trip.title,
        image:
          trip.TripPicture?.length > 0
            ? `${trip.TripPicture[0].imagePath}`
            : "/assets/imagetemple/8.jpg",
        status: trip.status,
        date: new Date(trip.dateStart).toLocaleDateString(),
        description: trip.description,
        type: trip.type,
        price: trip.price,
        showDetails: true,
        subtitle: trip.type === "paid" ? `‡∏£‡∏≤‡∏Ñ‡∏≤: ${trip.price} ‡∏ö‡∏≤‡∏ó` : "‡∏ü‡∏£‡∏µ",
        TripDetail: trip.TripDetail,
      }));

      setPackages(formattedData);
      setIsLoading(false);
    } catch (err) {
      console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡πÑ‡∏î‡πâ:", err);
      setError("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡πÑ‡∏î‡πâ ‚ùóÔ∏è");
      setIsLoading(false);
    }
  };

  useEffect(() => {
    fetchPackages();
  }, []);

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏£‡∏¥‡∏õ‡πÉ‡∏´‡∏°‡πà
  const handleCreateTrip = () => {
    navigate("/create-trip");
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏£‡∏¥‡∏õ
  const handleViewTrip = (tripId: number) => {
    console.log("üîç tripId ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á document:", tripId);
    navigate(`/document/${tripId}`);
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏ó‡∏£‡∏¥‡∏õ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ create-trip
  const handleCloneTrip = (trip: Trip) => {
    console.log("üìã ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏ó‡∏£‡∏¥‡∏õ:", trip);
    const d: Trip = {...trip, TripPicture: trip.TripPicture[0]} // ‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏£‡∏¥‡∏õ
    navigate("/create-trip", { state: { clonedTrip: d } });
  };

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ó‡∏£‡∏¥‡∏õ
  const handleCancelTrip = (tripId: number) => {
    navigate(`/TripCancel/${tripId}`);
  };

  if (isLoading) {
    return <DataLoading />
  }

  if (error) {
    return <div className="text-center text-red-500">{error}</div>;
  }

  return (
    <div className="max-w-5xl mx-auto p-5 min-h-screen">
      <header className="mb-6 text-center">
        <h1 className="text-2xl font-bold text-gray-800 mb-2">‡∏ó‡∏£‡∏¥‡∏õ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</h1>
        <div className="h-1 w-20 bg-teal-500 mx-auto"></div>
      </header>

      <div className="mb-6 flex justify-end">
        <button
          className="bg-teal-500 text-white py-2 px-6 rounded hover:bg-teal-600 cursor-pointer"
          onClick={handleCreateTrip}
        >
          ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏£‡∏¥‡∏õ‡πÉ‡∏´‡∏°‡πà
        </button>
      </div>

      <div className="flex flex-col gap-5">
        {packages.length > 0 ? (
          packages.map((pkg) => (
            <PackageCard
              key={pkg.id}
              packageData={pkg}
              onViewTrip={() => handleViewTrip(pkg.id)}
              onCancelTrip={() => handleCancelTrip(pkg.id)}
              onClone={() => handleCloneTrip(trip.find(v => v.id === pkg.id))} // ‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏ó‡∏£‡∏¥‡∏õ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
              onCreateTrip={handleCreateTrip}
            />
          ))
        ) : (
          <p className="text-center text-gray-500">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏£‡∏¥‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á</p>
        )}
      </div>
    </div>
  );
};

export default HistoryTrip;
