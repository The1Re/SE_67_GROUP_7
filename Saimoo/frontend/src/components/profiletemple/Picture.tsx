import { env } from "@/config";
import { useState } from "react";

// ‡πÄ‡∏û‡∏¥‡πà‡∏° interface ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
interface ImageData {
  imagePath: string;
  title?: string;
  description?: string;
}

const Picture = ({ images }: { images: ImageData[] }) => {
  const [selectedImage, setSelectedImage] = useState<string | null>(null);
  const [currentIndex, setCurrentIndex] = useState(0);

  // üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏≠‡∏•
  const openImage = (index) => {
    setCurrentIndex(index);
    setSelectedImage(images[index].imagePath);
  };

  // üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏¥‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  const closeImage = () => {
    setSelectedImage(null);
  };

  // üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏†‡∏≤‡∏û‡πÑ‡∏õ‡∏ó‡∏≤‡∏á‡∏ã‡πâ‡∏≤‡∏¢
  const prevImage = (e) => {
    e.stopPropagation();
    const newIndex = currentIndex > 0 ? currentIndex - 1 : images.length - 1;
    setCurrentIndex(newIndex);
    setSelectedImage(images[newIndex].imagePath);
  };

  // üîπ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏†‡∏≤‡∏û‡πÑ‡∏õ‡∏ó‡∏≤‡∏á‡∏Ç‡∏ß‡∏≤
  const nextImage = (e) => {
    e.stopPropagation();
    const newIndex = currentIndex < images.length - 1 ? currentIndex + 1 : 0;
    setCurrentIndex(newIndex);
    setSelectedImage(images[newIndex].imagePath);
  };

  return (
    <div>
      <div className="grid grid-cols-3 md:grid-cols-3 gap-6">
        {images.map((img, index) => (
          <div
            key={index}
            className="relative w-full rounded-lg overflow-hidden shadow-md cursor-pointer hover:scale-105 transition-transform"
            onClick={() => openImage(index)}
          >
            <img
              src={env.API_URL + "/" + img.imagePath}
              alt={`Image ${index + 1}`}
              className="w-full h-auto aspect-[16/9] object-cover rounded-lg"
            />
          </div>
        ))}
      </div>

      {/* üîπ Modal ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏¢‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ */}
      {selectedImage && (
        <div
          className="fixed inset-0 flex justify-center items-center backdrop-blur-md bg-opacity-75 bg-black z-50"
          onClick={closeImage}
        >
          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
          <button
            className="absolute left-5 text-white text-3xl font-bold p-2 bg-black bg-opacity-50 rounded-full hover:bg-opacity-80"
            onClick={prevImage}
          >
            ‚ùÆ
          </button>

          {/* ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å */}
          <img
            src={env.API_URL + "/" + selectedImage}
            alt="Expanded View"
            className="max-w-[70%] max-h-[70%] rounded-lg shadow-lg"
            onClick={(e) => e.stopPropagation()} // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏†‡∏≤‡∏û
          />

          {/* ‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ */}
          <button
            className="absolute right-5 text-white text-3xl font-bold p-2 bg-black bg-opacity-50 rounded-full hover:bg-opacity-80"
            onClick={nextImage}
          >
            ‚ùØ
          </button>
        </div>
      )}
    </div>
  );
};

export default Picture;
